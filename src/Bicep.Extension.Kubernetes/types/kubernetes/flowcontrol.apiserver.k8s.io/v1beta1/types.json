[
  {
    "$type": "StringLiteralType",
    "value": "FlowSchema"
  },
  {
    "$type": "StringLiteralType",
    "value": "flowcontrol.apiserver.k8s.io/v1beta1"
  },
  {
    "$type": "StringType"
  },
  {
    "$type": "ObjectType",
    "name": "labels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "annotations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "metadata",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The name of the resource."
      },
      "labels": {
        "type": {
          "$ref": "#/3"
        },
        "flags": 0,
        "description": "The labels for the resource."
      },
      "annotations": {
        "type": {
          "$ref": "#/4"
        },
        "flags": 0,
        "description": "The annotations for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1FlowSchemaSpec",
    "properties": {
      "distinguisherMethod": {
        "type": {
          "$ref": "#/7"
        },
        "flags": 0,
        "description": "FlowDistinguisherMethod specifies the method of a flow distinguisher."
      },
      "matchingPrecedence": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "`matchingPrecedence` is used to choose among the FlowSchemas that match a given request. The chosen FlowSchema is among those with the numerically lowest (which we take to be logically highest) MatchingPrecedence.  Each MatchingPrecedence value must be ranged in [1,10000]. Note that if the precedence is not specified, it will be set to 1000 as default."
      },
      "priorityLevelConfiguration": {
        "type": {
          "$ref": "#/9"
        },
        "flags": 1,
        "description": "PriorityLevelConfigurationReference contains information that points to the \"request-priority\" being used."
      },
      "rules": {
        "type": {
          "$ref": "#/27"
        },
        "flags": 0,
        "description": "`rules` describes which requests will match this flow schema. This FlowSchema matches a request if and only if at least one member of rules matches the request. if it is an empty slice, there will be no requests matching the FlowSchema."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1FlowDistinguisherMethod",
    "properties": {
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`type` is the type of flow distinguisher method The supported types are \"ByUser\" and \"ByNamespace\". Required."
      }
    }
  },
  {
    "$type": "IntegerType"
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1PriorityLevelConfigurationReference",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`name` is the name of the priority level configuration being referenced Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1PolicyRulesWithSubjects",
    "properties": {
      "nonResourceRules": {
        "type": {
          "$ref": "#/14"
        },
        "flags": 0,
        "description": "`nonResourceRules` is a list of NonResourcePolicyRules that identify matching requests according to their verb and the target non-resource URL."
      },
      "resourceRules": {
        "type": {
          "$ref": "#/21"
        },
        "flags": 0,
        "description": "`resourceRules` is a slice of ResourcePolicyRules that identify matching requests according to their verb and the target resource. At least one of `resourceRules` and `nonResourceRules` has to be non-empty."
      },
      "subjects": {
        "type": {
          "$ref": "#/26"
        },
        "flags": 1,
        "description": "subjects is the list of normal user, serviceaccount, or group that this rule cares about. There must be at least one member in this slice. A slice that includes both the system:authenticated and system:unauthenticated user groups matches every request. Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1NonResourcePolicyRule",
    "properties": {
      "nonResourceURLs": {
        "type": {
          "$ref": "#/12"
        },
        "flags": 1,
        "description": "`nonResourceURLs` is a set of url prefixes that a user should have access to and may not be empty. For example:\n  - \"/healthz\" is legal\n  - \"/hea*\" is illegal\n  - \"/hea\" is legal but matches nothing\n  - \"/hea/*\" also matches nothing\n  - \"/healthz/*\" matches all per-component health checks.\n\"*\" matches all non-resource urls. if it is present, it must be the only entry. Required."
      },
      "verbs": {
        "type": {
          "$ref": "#/13"
        },
        "flags": 1,
        "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs. If it is present, it must be the only entry. Required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/11"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1ResourcePolicyRule",
    "properties": {
      "apiGroups": {
        "type": {
          "$ref": "#/16"
        },
        "flags": 1,
        "description": "`apiGroups` is a list of matching API groups and may not be empty. \"*\" matches all API groups and, if present, must be the only entry. Required."
      },
      "clusterScope": {
        "type": {
          "$ref": "#/17"
        },
        "flags": 0,
        "description": "`clusterScope` indicates whether to match requests that do not specify a namespace (which happens either because the resource is not namespaced or the request targets all namespaces). If this field is omitted or false then the `namespaces` field must contain a non-empty list."
      },
      "namespaces": {
        "type": {
          "$ref": "#/18"
        },
        "flags": 0,
        "description": "`namespaces` is a list of target namespaces that restricts matches.  A request that specifies a target namespace matches only if either (a) this list contains that target namespace or (b) this list contains \"*\".  Note that \"*\" matches any specified namespace but does not match a request that _does not specify_ a namespace (see the `clusterScope` field for that). This list may be empty, but only if `clusterScope` is true."
      },
      "resources": {
        "type": {
          "$ref": "#/19"
        },
        "flags": 1,
        "description": "`resources` is a list of matching resources (i.e., lowercase and plural) with, if desired, subresource.  For example, [ \"services\", \"nodes/status\" ].  This list may not be empty. \"*\" matches all resources and, if present, must be the only entry. Required."
      },
      "verbs": {
        "type": {
          "$ref": "#/20"
        },
        "flags": 1,
        "description": "`verbs` is a list of matching verbs and may not be empty. \"*\" matches all verbs and, if present, must be the only entry. Required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "BooleanType"
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/15"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1Subject",
    "properties": {
      "group": {
        "type": {
          "$ref": "#/23"
        },
        "flags": 0,
        "description": "GroupSubject holds detailed information for group-kind subject."
      },
      "kind": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`kind` indicates which one of the other fields is non-empty. Required"
      },
      "serviceAccount": {
        "type": {
          "$ref": "#/24"
        },
        "flags": 0,
        "description": "ServiceAccountSubject holds detailed information for service-account-kind subject."
      },
      "user": {
        "type": {
          "$ref": "#/25"
        },
        "flags": 0,
        "description": "UserSubject holds detailed information for user-kind subject."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1GroupSubject",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "name is the user group that matches, or \"*\" to match all user groups. See https://github.com/kubernetes/apiserver/blob/master/pkg/authentication/user/user.go for some well-known group names. Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1ServiceAccountSubject",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`name` is the name of matching ServiceAccount objects, or \"*\" to match regardless of name. Required."
      },
      "namespace": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`namespace` is the namespace of matching ServiceAccount objects. Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1UserSubject",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`name` is the username that matches, or \"*\" to match all usernames. Required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/22"
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/10"
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1FlowSchemaStatus",
    "properties": {
      "conditions": {
        "type": {
          "$ref": "#/30"
        },
        "flags": 0,
        "description": "`conditions` is a list of the current states of FlowSchema."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1FlowSchemaCondition",
    "properties": {
      "lastTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`message` is a human-readable message indicating details about last transition."
      },
      "reason": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`status` is the status of the condition. Can be True, False, Unknown. Required."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`type` is the type of the condition. Required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/29"
    }
  },
  {
    "$type": "ObjectType",
    "name": "flowcontrol.apiserver.k8s.io/FlowSchema",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/0"
        },
        "flags": 10,
        "description": "The resource kind."
      },
      "apiVersion": {
        "type": {
          "$ref": "#/1"
        },
        "flags": 10,
        "description": "The api version."
      },
      "metadata": {
        "type": {
          "$ref": "#/5"
        },
        "flags": 1,
        "description": "The resource metadata."
      },
      "spec": {
        "type": {
          "$ref": "#/6"
        },
        "flags": 0,
        "description": "FlowSchemaSpec describes how the FlowSchema's specification looks like."
      },
      "status": {
        "type": {
          "$ref": "#/28"
        },
        "flags": 0,
        "description": "FlowSchemaStatus represents the current state of a FlowSchema."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "flowcontrol.apiserver.k8s.io/FlowSchema@v1beta1",
    "scopeType": 0,
    "body": {
      "$ref": "#/31"
    },
    "flags": 0
  },
  {
    "$type": "StringLiteralType",
    "value": "PriorityLevelConfiguration"
  },
  {
    "$type": "StringLiteralType",
    "value": "flowcontrol.apiserver.k8s.io/v1beta1"
  },
  {
    "$type": "ObjectType",
    "name": "labels",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "annotations",
    "properties": {},
    "additionalProperties": {
      "$ref": "#/2"
    }
  },
  {
    "$type": "ObjectType",
    "name": "metadata",
    "properties": {
      "name": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 9,
        "description": "The name of the resource."
      },
      "labels": {
        "type": {
          "$ref": "#/35"
        },
        "flags": 0,
        "description": "The labels for the resource."
      },
      "annotations": {
        "type": {
          "$ref": "#/36"
        },
        "flags": 0,
        "description": "The annotations for the resource."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1PriorityLevelConfigurationSpec",
    "properties": {
      "limited": {
        "type": {
          "$ref": "#/39"
        },
        "flags": 0,
        "description": "LimitedPriorityLevelConfiguration specifies how to handle requests that are subject to limits. It addresses two issues:\n  - How are requests for this priority level limited?\n  - What should be done with requests that exceed the limit?"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`type` indicates whether this priority level is subject to limitation on request execution.  A value of `\"Exempt\"` means that requests of this priority level are not subject to a limit (and thus are never queued) and do not detract from the capacity made available to other priority levels.  A value of `\"Limited\"` means that (a) requests of this priority level _are_ subject to limits and (b) some of the server's limited capacity is made available exclusively to this priority level. Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1LimitedPriorityLevelConfiguration",
    "properties": {
      "assuredConcurrencyShares": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "`assuredConcurrencyShares` (ACS) configures the execution limit, which is a limit on the number of requests of this priority level that may be exeucting at a given time.  ACS must be a positive number. The server's concurrency limit (SCL) is divided among the concurrency-controlled priority levels in proportion to their assured concurrency shares. This produces the assured concurrency value (ACV) --- the number of requests that may be executing at a time --- for each such priority level:\n\n            ACV(l) = ceil( SCL * ACS(l) / ( sum[priority levels k] ACS(k) ) )\n\nbigger numbers of ACS mean more reserved concurrent requests (at the expense of every other PL). This field has a default value of 30."
      },
      "limitResponse": {
        "type": {
          "$ref": "#/40"
        },
        "flags": 0,
        "description": "LimitResponse defines how to handle requests that can not be executed right now."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1LimitResponse",
    "properties": {
      "queuing": {
        "type": {
          "$ref": "#/41"
        },
        "flags": 0,
        "description": "QueuingConfiguration holds the configuration parameters for queuing"
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 1,
        "description": "`type` is \"Queue\" or \"Reject\". \"Queue\" means that requests that can not be executed upon arrival are held in a queue until they can be executed or a queuing limit is reached. \"Reject\" means that requests that can not be executed upon arrival are rejected. Required."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1QueuingConfiguration",
    "properties": {
      "handSize": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "`handSize` is a small positive number that configures the shuffle sharding of requests into queues.  When enqueuing a request at this priority level the request's flow identifier (a string pair) is hashed and the hash value is used to shuffle the list of queues and deal a hand of the size specified here.  The request is put into one of the shortest queues in that hand. `handSize` must be no larger than `queues`, and should be significantly smaller (so that a few heavy flows do not saturate most of the queues).  See the user-facing documentation for more extensive guidance on setting this field.  This field has a default value of 8."
      },
      "queueLengthLimit": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "`queueLengthLimit` is the maximum number of requests allowed to be waiting in a given queue of this priority level at a time; excess requests are rejected.  This value must be positive.  If not specified, it will be defaulted to 50."
      },
      "queues": {
        "type": {
          "$ref": "#/8"
        },
        "flags": 0,
        "description": "`queues` is the number of queues for this priority level. The queues exist independently at each apiserver. The value must be positive.  Setting it to 1 effectively precludes shufflesharding and thus makes the distinguisher method of associated flow schemas irrelevant.  This field has a default value of 64."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1PriorityLevelConfigurationStatus",
    "properties": {
      "conditions": {
        "type": {
          "$ref": "#/44"
        },
        "flags": 0,
        "description": "`conditions` is the current state of \"request-priority\"."
      }
    }
  },
  {
    "$type": "ObjectType",
    "name": "IoK8SApiFlowcontrolV1Beta1PriorityLevelConfigurationCondition",
    "properties": {
      "lastTransitionTime": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers."
      },
      "message": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`message` is a human-readable message indicating details about last transition."
      },
      "reason": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`reason` is a unique, one-word, CamelCase reason for the condition's last transition."
      },
      "status": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`status` is the status of the condition. Can be True, False, Unknown. Required."
      },
      "type": {
        "type": {
          "$ref": "#/2"
        },
        "flags": 0,
        "description": "`type` is the type of the condition. Required."
      }
    }
  },
  {
    "$type": "ArrayType",
    "itemType": {
      "$ref": "#/43"
    }
  },
  {
    "$type": "ObjectType",
    "name": "flowcontrol.apiserver.k8s.io/PriorityLevelConfiguration",
    "properties": {
      "kind": {
        "type": {
          "$ref": "#/33"
        },
        "flags": 10,
        "description": "The resource kind."
      },
      "apiVersion": {
        "type": {
          "$ref": "#/34"
        },
        "flags": 10,
        "description": "The api version."
      },
      "metadata": {
        "type": {
          "$ref": "#/37"
        },
        "flags": 1,
        "description": "The resource metadata."
      },
      "spec": {
        "type": {
          "$ref": "#/38"
        },
        "flags": 0,
        "description": "PriorityLevelConfigurationSpec specifies the configuration of a priority level."
      },
      "status": {
        "type": {
          "$ref": "#/42"
        },
        "flags": 0,
        "description": "PriorityLevelConfigurationStatus represents the current state of a \"request-priority\"."
      }
    }
  },
  {
    "$type": "ResourceType",
    "name": "flowcontrol.apiserver.k8s.io/PriorityLevelConfiguration@v1beta1",
    "scopeType": 0,
    "body": {
      "$ref": "#/45"
    },
    "flags": 0
  }
]