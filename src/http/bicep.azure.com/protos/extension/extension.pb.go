// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: Bicep.Extension/extension.proto

package extension

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{0}
}

type ExtensibleImportData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string  `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	Version  string  `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Config   *string `protobuf:"bytes,3,opt,name=config,proto3,oneof" json:"config,omitempty"`
}

func (x *ExtensibleImportData) Reset() {
	*x = ExtensibleImportData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibleImportData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibleImportData) ProtoMessage() {}

func (x *ExtensibleImportData) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibleImportData.ProtoReflect.Descriptor instead.
func (*ExtensibleImportData) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{1}
}

func (x *ExtensibleImportData) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ExtensibleImportData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ExtensibleImportData) GetConfig() string {
	if x != nil && x.Config != nil {
		return *x.Config
	}
	return ""
}

type ExtensibleResourceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Properties *string `protobuf:"bytes,2,opt,name=properties,proto3,oneof" json:"properties,omitempty"`
}

func (x *ExtensibleResourceData) Reset() {
	*x = ExtensibleResourceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibleResourceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibleResourceData) ProtoMessage() {}

func (x *ExtensibleResourceData) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibleResourceData.ProtoReflect.Descriptor instead.
func (*ExtensibleResourceData) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{2}
}

func (x *ExtensibleResourceData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExtensibleResourceData) GetProperties() string {
	if x != nil && x.Properties != nil {
		return *x.Properties
	}
	return ""
}

type ExtensibleResourceMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReadOnlyProperties  []string `protobuf:"bytes,1,rep,name=readOnlyProperties,proto3" json:"readOnlyProperties,omitempty"`
	ImmutableProperties []string `protobuf:"bytes,2,rep,name=immutableProperties,proto3" json:"immutableProperties,omitempty"`
	DynamicProperties   []string `protobuf:"bytes,3,rep,name=dynamicProperties,proto3" json:"dynamicProperties,omitempty"`
}

func (x *ExtensibleResourceMetadata) Reset() {
	*x = ExtensibleResourceMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibleResourceMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibleResourceMetadata) ProtoMessage() {}

func (x *ExtensibleResourceMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibleResourceMetadata.ProtoReflect.Descriptor instead.
func (*ExtensibleResourceMetadata) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{3}
}

func (x *ExtensibleResourceMetadata) GetReadOnlyProperties() []string {
	if x != nil {
		return x.ReadOnlyProperties
	}
	return nil
}

func (x *ExtensibleResourceMetadata) GetImmutableProperties() []string {
	if x != nil {
		return x.ImmutableProperties
	}
	return nil
}

func (x *ExtensibleResourceMetadata) GetDynamicProperties() []string {
	if x != nil {
		return x.DynamicProperties
	}
	return nil
}

type ExtensibilityError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Target  string `protobuf:"bytes,3,opt,name=target,proto3" json:"target,omitempty"`
}

func (x *ExtensibilityError) Reset() {
	*x = ExtensibilityError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibilityError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibilityError) ProtoMessage() {}

func (x *ExtensibilityError) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibilityError.ProtoReflect.Descriptor instead.
func (*ExtensibilityError) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{4}
}

func (x *ExtensibilityError) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExtensibilityError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ExtensibilityError) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

type ExtensibilityOperationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Import   *ExtensibleImportData   `protobuf:"bytes,1,opt,name=import,proto3" json:"import,omitempty"`
	Resource *ExtensibleResourceData `protobuf:"bytes,2,opt,name=resource,proto3" json:"resource,omitempty"`
}

func (x *ExtensibilityOperationRequest) Reset() {
	*x = ExtensibilityOperationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibilityOperationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibilityOperationRequest) ProtoMessage() {}

func (x *ExtensibilityOperationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibilityOperationRequest.ProtoReflect.Descriptor instead.
func (*ExtensibilityOperationRequest) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{5}
}

func (x *ExtensibilityOperationRequest) GetImport() *ExtensibleImportData {
	if x != nil {
		return x.Import
	}
	return nil
}

func (x *ExtensibilityOperationRequest) GetResource() *ExtensibleResourceData {
	if x != nil {
		return x.Resource
	}
	return nil
}

type ExtensibilityOperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resource         *ExtensibleResourceData     `protobuf:"bytes,1,opt,name=resource,proto3,oneof" json:"resource,omitempty"`
	ResourceMetadata *ExtensibleResourceMetadata `protobuf:"bytes,2,opt,name=resourceMetadata,proto3,oneof" json:"resourceMetadata,omitempty"`
	Errors           []*ExtensibilityError       `protobuf:"bytes,3,rep,name=errors,proto3" json:"errors,omitempty"`
}

func (x *ExtensibilityOperationResponse) Reset() {
	*x = ExtensibilityOperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_Bicep_Extension_extension_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensibilityOperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensibilityOperationResponse) ProtoMessage() {}

func (x *ExtensibilityOperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_Bicep_Extension_extension_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensibilityOperationResponse.ProtoReflect.Descriptor instead.
func (*ExtensibilityOperationResponse) Descriptor() ([]byte, []int) {
	return file_Bicep_Extension_extension_proto_rawDescGZIP(), []int{6}
}

func (x *ExtensibilityOperationResponse) GetResource() *ExtensibleResourceData {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ExtensibilityOperationResponse) GetResourceMetadata() *ExtensibleResourceMetadata {
	if x != nil {
		return x.ResourceMetadata
	}
	return nil
}

func (x *ExtensibilityOperationResponse) GetErrors() []*ExtensibilityError {
	if x != nil {
		return x.Errors
	}
	return nil
}

var File_Bicep_Extension_extension_proto protoreflect.FileDescriptor

var file_Bicep_Extension_extension_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x42, 0x69, 0x63, 0x65, 0x70, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x74, 0x0a, 0x14, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x60, 0x0a, 0x16, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0xac, 0x01,
	0x0a, 0x1a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x12,
	0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e, 0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x6e,
	0x6c, 0x79, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x13,
	0x69, 0x6d, 0x6d, 0x75, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6d, 0x6d, 0x75, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c,
	0x0a, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x64, 0x79, 0x6e, 0x61, 0x6d,
	0x69, 0x63, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x5a, 0x0a, 0x12,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x1d, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x06, 0x69, 0x6d,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x69, 0x6d, 0x70,
	0x6f, 0x72, 0x74, 0x12, 0x3d, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x1e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73,
	0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x56, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x01, 0x52, 0x10, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x88, 0x01,
	0x01, 0x12, 0x35, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb8, 0x03, 0x0a, 0x0e, 0x42,
	0x69, 0x63, 0x65, 0x70, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x5b, 0x0a,
	0x04, 0x53, 0x61, 0x76, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x0b, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x61, 0x76, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x29, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x28, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x04, 0x50, 0x69, 0x6e,
	0x67, 0x12, 0x10, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a, 0x20, 0x62, 0x69, 0x63, 0x65, 0x70, 0x2e, 0x61,
	0x7a, 0x75, 0x72, 0x65, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0xaa, 0x02, 0x13, 0x42, 0x69, 0x63, 0x65,
	0x70, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x52, 0x70, 0x63, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_Bicep_Extension_extension_proto_rawDescOnce sync.Once
	file_Bicep_Extension_extension_proto_rawDescData = file_Bicep_Extension_extension_proto_rawDesc
)

func file_Bicep_Extension_extension_proto_rawDescGZIP() []byte {
	file_Bicep_Extension_extension_proto_rawDescOnce.Do(func() {
		file_Bicep_Extension_extension_proto_rawDescData = protoimpl.X.CompressGZIP(file_Bicep_Extension_extension_proto_rawDescData)
	})
	return file_Bicep_Extension_extension_proto_rawDescData
}

var file_Bicep_Extension_extension_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_Bicep_Extension_extension_proto_goTypes = []interface{}{
	(*Empty)(nil),                          // 0: extension.Empty
	(*ExtensibleImportData)(nil),           // 1: extension.ExtensibleImportData
	(*ExtensibleResourceData)(nil),         // 2: extension.ExtensibleResourceData
	(*ExtensibleResourceMetadata)(nil),     // 3: extension.ExtensibleResourceMetadata
	(*ExtensibilityError)(nil),             // 4: extension.ExtensibilityError
	(*ExtensibilityOperationRequest)(nil),  // 5: extension.ExtensibilityOperationRequest
	(*ExtensibilityOperationResponse)(nil), // 6: extension.ExtensibilityOperationResponse
}
var file_Bicep_Extension_extension_proto_depIdxs = []int32{
	1,  // 0: extension.ExtensibilityOperationRequest.import:type_name -> extension.ExtensibleImportData
	2,  // 1: extension.ExtensibilityOperationRequest.resource:type_name -> extension.ExtensibleResourceData
	2,  // 2: extension.ExtensibilityOperationResponse.resource:type_name -> extension.ExtensibleResourceData
	3,  // 3: extension.ExtensibilityOperationResponse.resourceMetadata:type_name -> extension.ExtensibleResourceMetadata
	4,  // 4: extension.ExtensibilityOperationResponse.errors:type_name -> extension.ExtensibilityError
	5,  // 5: extension.BicepExtension.Save:input_type -> extension.ExtensibilityOperationRequest
	5,  // 6: extension.BicepExtension.PreviewSave:input_type -> extension.ExtensibilityOperationRequest
	5,  // 7: extension.BicepExtension.Get:input_type -> extension.ExtensibilityOperationRequest
	5,  // 8: extension.BicepExtension.Delete:input_type -> extension.ExtensibilityOperationRequest
	0,  // 9: extension.BicepExtension.Ping:input_type -> extension.Empty
	6,  // 10: extension.BicepExtension.Save:output_type -> extension.ExtensibilityOperationResponse
	6,  // 11: extension.BicepExtension.PreviewSave:output_type -> extension.ExtensibilityOperationResponse
	6,  // 12: extension.BicepExtension.Get:output_type -> extension.ExtensibilityOperationResponse
	6,  // 13: extension.BicepExtension.Delete:output_type -> extension.ExtensibilityOperationResponse
	0,  // 14: extension.BicepExtension.Ping:output_type -> extension.Empty
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_Bicep_Extension_extension_proto_init() }
func file_Bicep_Extension_extension_proto_init() {
	if File_Bicep_Extension_extension_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_Bicep_Extension_extension_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibleImportData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibleResourceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibleResourceMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibilityError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibilityOperationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_Bicep_Extension_extension_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensibilityOperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_Bicep_Extension_extension_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_Bicep_Extension_extension_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_Bicep_Extension_extension_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_Bicep_Extension_extension_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_Bicep_Extension_extension_proto_goTypes,
		DependencyIndexes: file_Bicep_Extension_extension_proto_depIdxs,
		MessageInfos:      file_Bicep_Extension_extension_proto_msgTypes,
	}.Build()
	File_Bicep_Extension_extension_proto = out.File
	file_Bicep_Extension_extension_proto_rawDesc = nil
	file_Bicep_Extension_extension_proto_goTypes = nil
	file_Bicep_Extension_extension_proto_depIdxs = nil
}
